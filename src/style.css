:root {
  --clr-primary: rgb(54, 112, 199);
  --clr-light: #f4f4f4;
  --clr-dark: #333;
  --clr-warning: rgb(99, 36, 36);
}

*,
*::before,
*::after {
  font-family: inherit;
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: "Work Sans", sans-serif;
  font-weight: 300;
  font-size: 1.5rem;
  background-color: var(--clr-primary);
  color: var(--clr-light);

  display: grid;
  grid:
    "header header header header" auto
    "...... lists active ......" auto /
    1fr minmax(100px, 300px) minmax(250px, 600px) 1fr;
}

.title {
  grid-area: header;
  text-align: center;
  font-size: calc(7vh + 2rem);
  font-weight: 900;
  color: rgba(0, 0, 0, 0.1);
  letter-spacing: 2px;
  margin: -0.3em 0 0.5em;
}

.all-tasks {
  grid-area: lists;
}

.task-list {
  font-size: 1.2rem;
  line-height: 1.7;
  list-style: circle;
  padding-left: 1.1em;
}

.list-name {
  cursor: pointer;
}
.list-name:hover {
  opacity: 0.7;
}

form {
  display: flex;
}

.btn {
  cursor: pointer;
  background: 0;
  border: 0;
  padding: 0;
  color: inherit;
}

.btn.create {
  font-size: 1.5rem;
  font-weight: 900;
  margin-right: 0.25em;
  transition: opacity 250ms ease-in;
}

.btn.list:hover {
  opacity: 0.7;
}

.btn.delete {
  opacity: 0.7;
  font-size: 1rem;
  transition: color 200ms;
}

.btn.delete:hover {
  color: var(--clr-warning);
}

.new {
  background: transparent;
  border: 0;
  color: inherit;
  border-bottom: 1px solid currentColor;
  font-size: inherit;
  outline: none;

  transition: border-bottom 250ms ease-in;
  order: 2;

  padding: 0.25em;
}
.new::placeholder {
  color: inherit;
  opacity: 0.4;
}
.new:focus {
  border-bottom-width: 2px;
}
.new:focus::placeholder {
  opacity: 0.15;
}

.new.list {
  font-size: 1.1rem;
}
.new.task {
  margin-bottom: 0;
}

.active-list {
  font-weight: 900;
}

.todo-list {
  --spacer: 2rem;
  align-self: start;
  margin-top: 2rem;
  grid-area: active;
  background-color: var(--clr-light);
  color: var(--clr-dark);
}

.todo-header {
  background: #fbc80a;
  padding: var(--spacer);
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: auto;
  box-shadow: 0 4px 2px -2px gray;
}

.list-title {
  margin: 0 1em 0 0;
}

.task-count {
  margin: 0;
  font-size: 1rem;
}

.circle-wrap {
  margin: 150px auto;
  width: 150px;
  height: 150px;
  background: #fefcff;
  border-radius: 50%;
  border: 1px solid #cdcbd0;
}

.todo-body {
  padding: var(--spacer);
  position: relative;
  background-color: #f6f7be;
}

.new-task-creator .create {
  color: var(--clr-primary);
}

[type="checkbox"] {
  opacity: 0;
  position: absolute;
}

.task label {
  display: flex-inline;
  align-items: center;
  position: relative;
}

.task {
  position: relative;
  margin-bottom: 1.25em;
}
.task::after {
  content: "";
  position: absolute;
  right: 0;
  left: 0;
  bottom: -0.5em;
  height: 1px;
  background: currentColor;
  opacity: 0.1;
}

.custom-checkbox {
  --size: 0.75em;
  display: inline-block;
  width: var(--size);
  height: var(--size);
  margin-right: var(--size);
  cursor: pointer;
  border: 2px solid currentColor;
  border-radius: 50%;
  transform: scale(1);
  transition: transform 200ms ease-in-out;
}

.custom-due-date {
  display: inline-block;
  padding: 0.25em;
  background-color: rgb(26, 25, 25);
  border-radius: 5px;
  font-family: Arial, Helvetica, sans-serif;
  font-weight: bold;
  font-size: 1em;
  position: absolute;
  color: transparent;

  right: 0;
  bottom: -0.25em;
}

.custom-due-date span {
  background: linear-gradient(
    135deg,
    var(--clr-primary),
    var(--clr-light),
    blue
  );
  background-clip: text;
  -webkit-background-clip: text;
}
.custom-due-date::before,
.custom-due-date::after {
  content: "";
  display: block;
  width: 5%;
  height: 5%;
  background-image: linear-gradient(
    135deg,
    rgb(255, 145, 0),
    rgb(255, 0, 221),
    blue
  );
  position: absolute;
  top: -10%;
  left: -4%;
  z-index: -1;
  border-radius: 5px;
}
.custom-due-date::after {
  filter: blur(5px);
}

.task:hover .custom-checkbox,
[type="checkbox"]:focus + label .custom-checkbox {
  transform: scale(1.2);
  color: var(--clr-primary);
}

[type="checkbox"]:checked + label .custom-checkbox {
  background: var(--clr-primary);
  border-color: var(--clr-primary);
  box-shadow: inset 0 0 0px 2px white;
}

[type="checkbox"]:checked + label {
  opacity: 0.5;
}

.task label::after {
  content: "";
  position: absolute;
  left: 1.5em;
  right: 0;
  top: calc(50% - 1.5px);
  height: 3px;
  background: currentColor;
  transform: scaleX(0);
  transition: transform 150ms ease-in-out;
  transform-origin: right;
}

[type="checkbox"]:checked + label::after {
  transform: scaleX(1);
  transform-origin: left;
}

.delete-stuff {
  display: flex;
  justify-content: space-evenly;
  position: absolute;
  width: 100%;
  left: 0;
  bottom: -35px;
  color: var(--clr-light);
}

.skill {
  --cirlce-size: 160px;
  --cirlce-width: var(--cirlce-size);
  --cirlce-height: var(--cirlce-size);
  width: var(--cirlce-width);
  height: var(--cirlce-height);
  position: relative;
  margin: 10px;
}

.outer {
  width: var(--cirlce-width);
  height: var(--cirlce-height);
  padding: calc((var(--cirlce-width) * 0.25) / 2);
  box-shadow: 6px 6px 10px -1px rgba(0, 0, 0, 0.15),
    -6px -6px 10px -1px rgba(225, 225, 225, 0.7);
  border-radius: 50%;
}

.inner {
  width: calc(var(--cirlce-width) * 0.75);
  height: calc(var(--cirlce-height) * 0.75);
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: inset 4px 4px 6px -1px rgba(225, 225, 225, 0.7),
    -0.5px -0.5px 0px rgba(225, 225, 225, 1),
    0.5px 0.5px 0px rgba(0, 0, 0, 0.15), 0px 12px 10px -10px rgba(0, 0, 0, 0.05);
  border-radius: 50%;
}

#number {
  font-weight: 600;
  color: #555;
  font-size: 30px;
}

circle {
  fill: none;
  stroke: url(#GradientColor);
  stroke-width: 20px;
  stroke-dasharray: 450;
  transition: all 0.8s ease-in-out;
}

svg {
  position: absolute;
  top: 0;
  left: 0;
  width: var(--cirlce-width);
  height: var(--cirlce-height);
}
